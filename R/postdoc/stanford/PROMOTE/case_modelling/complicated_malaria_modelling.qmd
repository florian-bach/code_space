---
title: "Modelling Complicated Malaria in PROMOTE"
format: html
page-layout: article
theme: robobook
width: 10
editor: visual
wrap: auto
fig-format: png
fig-align: "left"
code-fold: true
---

## Intro

Modelling the incidence of complicated and severe malaria using the 2014 Gonçalves *et al.* NEJM dataset revealed that the risk of both severe and complicated malaria decreased over time. The reduction of the risk of complicated malaria was best fit by an exponential decay, whereas for severe malaria exponential and linear decay were comparable. In contrast to the original authors, both risks decreased over time, suggesting the acquisition of protection of some kind. To test whether this relationship holds true in the Promote dataset I tested a couple of linear regression models.

## Data Generation

Only look at only incident episodes; split data by individual, count number of episodes for each child. Once this is known, the order of infection can be calculated easily based on the child's age at each episode. The number of complicated episodes at first infections divided by the total number of first infections thus gives a probability we can model as the order infection increases. This is what worked best in the Gonçalves dataset.

```{r}
#| label: load libraries & functions
#| warning: false
library(dplyr)
library(ggplot2)
library(tidyr)
library(visreg)

model_visualiser <- function(model=NULL, xvar=NULL){
  model_data = model$data
  xvar_range = range(model_data[[xvar]])
  pre_df = data.frame(seq(from = xvar_range[1], to = xvar_range[2], length.out = 100))
  colnames(pre_df)=xvar
  error = predict(model, newdata = pre_df, se.fit = TRUE)
  pre_df$lci = error$fit - 1.96 * error$se.fit
  pre_df$fit = error$fit
  pre_df$uci = error$fit + 1.96 * error$se.fit
  return(pre_df)
}

lme4_model_visualiser <- function(model=NULL, xvar=NULL){
  model_data = data.frame(model@frame)
  xvar_range = range(model_data[[xvar]])
  pre_df = data.frame(matrix(nrow=100))
  pre_df[[xvar]] = seq(from = xvar_range[1], to = xvar_range[2], length.out = 100)
  pre_df[[names(indie_disease_model@cnms[1])]]=1
  ci = predictInterval(merMod = indie_disease_model, newdata = pre_df,
                level = 0.95, n.sims = 1000,
                stat = "median", type="linear.prediction",
                include.resid.var = TRUE)


  ci$n_infection = pre_df$n_infection
  
  return(ci)
}
```

```{r}
#| label: generate data frames

promote_data <- haven::read_dta("~/postdoc/stanford/clinical_data/PROMOTE/BC-3 childs all visit database FINAL.dta")

# restrict data to only include incident malaria 
malaria_only <- filter(promote_data, incidentmalaria==1)

# make a dataframe with only the kids that did get complicated malaria
kids_with_complicated_malaria <- unique(subset(promote_data, promote_data$complicatedmalaria==1, select = id))

# select relevant columns, recode disease columns to something human-readable
smaller_data <- promote_data %>%
    select(id, date, dob, age, temp, hb, uniqueid, incidentmalaria, complicatedmalaria, severe, parsdens) %>%
  mutate(complicatedmalaria=ifelse(is.na(complicatedmalaria), "uncomplicated", "complicated")) %>%
  mutate(severe=ifelse(is.na(severe), "non_severe", "severe")) %>%
  mutate(incidentmalaria=ifelse(is.na(incidentmalaria), "not_incident", "incident")) %>%
  mutate(age_cat=ifelse(age>0.5, "under_six_months", "over_six_months"))
  
# look at only incident episodes; split data by individual, make column indicating the total number of infections for each kid;
# add column for order of infection, add single column for disease status
complicated_data <- smaller_data %>%
  filter(incidentmalaria=="incident")%>%
  group_by(id) %>%
  add_count(name="total_n_infection") %>%
  arrange(age) %>%
  mutate(n_infection = seq(1, max(total_n_infection))) %>%
  mutate(disease=ifelse(severe=="severe", "severe",
                        ifelse(complicatedmalaria=="complicated", "complicated", "uncomplicated")),
        comp_num=ifelse(complicatedmalaria=="complicated", 1, 0)
    )

# calculate total number of observations for 1st, 2nd infection and so on
total_infections <- complicated_data %>%
  group_by(n_infection) %>%
  count(name = "total_infections")

# put together summary data frame 
complicated_df <- as.data.frame(table(complicated_data$n_infection, complicated_data$complicatedmalaria))
colnames(complicated_df) <- c("n_infection", "disease", "complicated_episodes")

# only include complicated (not uncomplicated) cases, inlcude more summary stats
complicated_df <- subset(complicated_df, complicated_df$disease=="complicated")
complicated_df$total_infections <- total_infections$total_infections
complicated_df$risk <- complicated_df$complicated_episodes/complicated_df$total_infections
complicated_df$n_infection <- as.numeric(complicated_df$n_infection)

```

## Model Selection

As a start, I decided to use a straight-forward binomial regression model.

```{r}
#| label: binomial model
#| fig-cap: "Binomial regression model of complicated malaria risk"
#| fig-width: 7
#| fig-height: 5
#| warning: false

# binomial regression
comp_model <- glm(risk~n_infection, family = "binomial", weights = total_infections, data = complicated_df)

#save model as function for plotting
comp_model_fun <- function(x){exp(comp_model$coefficients[1])*exp(comp_model$coefficients[2])^x}


#calculate SE for plotting
prd <- data.frame(n_infection = seq(from = 1, to = 10, length.out = 100))
err <- predict(comp_model, newdata = prd, se.fit = TRUE)

prd$lci <- err$fit - 1.96 * err$se.fit
prd$fit <- err$fit
prd$uci <- err$fit + 1.96 * err$se.fit



bino_model_plot <- ggplot(complicated_df, aes(x=n_infection, y=risk))+
  geom_point(color="red")+
  theme_minimal()+
  geom_ribbon(data=prd, aes(x=n_infection, ymin = exp(lci), ymax = exp(uci)),
              alpha = 0.2, inherit.aes = FALSE)+
  geom_function(fun = comp_model_fun, colour="black")+
  ylab("Risk of Complicated Episodes")+
  scale_x_continuous(breaks = 1:10)+
  #scale_y_continuous(limits = c(0,0.2))+
  xlab("Order of Infection")

plot(bino_model_plot)
```

The model doesn't fit very well, looks weird and has a huge range of error toward higher orders of infection. In hindsight this is not surprising because the relationship between order of infection and risk of complicated malaria is not very linear. Since the data looks vaguely quadratic, I decided to include a quadratic term for n_infection.

```{r}
#| fig-cap: "Residuals vs. fitted values for binomial model"
#| fig-width: 7
#| fig-height: 7
#| warning: false
#| echo: false
#| include: false
# look at model fit


# The model doesn't fit very well, looks weird and has a huge range of error toward higher orders of infection. In hindsight this is not surprising because the relationship between order of infection and risk of complicated malaria is not very linear. Time to inspect model properties.
# plot(comp_model, which = 1)
```

```{r}
#| fig-cap: "Quadratic linear regression model for complicated malaria"
#| fig-width: 7
#| fig-height: 4.2
#| warning: false

comp_model2 <- glm(risk~n_infection+I(n_infection^2), data = complicated_df, weights = total_infections, family="binomial")

comp_model_fun2 <- function(x){
  exp(comp_model2$coefficients[1])*
    exp(comp_model2$coefficients[2])^x*
    exp(comp_model2$coefficients[3])^x^2}


ggplot(complicated_df, aes(x=n_infection, y=risk))+
  geom_point(color="red")+
  theme_minimal()+
  geom_ribbon(data=model_visualiser(comp_model2, "n_infection"), aes(x=n_infection, ymin = exp(lci), ymax = exp(uci)),
              alpha = 0.2, inherit.aes = FALSE)+
  geom_function(fun = comp_model_fun2, colour="black")+
  ylab("Risk of Complicated Episodes")+
  xlab("Order of Infection")
```

The shape of the data is much better approximated by this model, both the linear and quadratic coefficients for n_infection are significant. Model error is much wider at high orders of infection, which makes sense, because we have relatively little data here, as shown in the plots below.

```{r}
#| fig-cap: "Number of Complicated Episodes at nth Infection"
#| layout-ncol: 2
#| warning: false

side_by_side_theme <- theme(axis.text = element_text(size = 20),
        axis.title = element_text(size = 22))

complicated_data %>%
  group_by(n_infection)%>%
  summarise(count = sum(comp_num)) %>%
  ggplot(aes(x=n_infection, y=count))+
  geom_bar(stat="identity", fill="darkred")+
  theme_minimal()+
  ylab("# of Complicated Episodes")+
  scale_x_continuous(breaks = 1:10)+
  side_by_side_theme+
  xlab("Order of Infection")

complicated_data %>%
  group_by(n_infection)%>%
  summarise(count = n()) %>%
  ggplot(aes(x=n_infection, y=count))+
  geom_bar(stat="identity", fill="darkblue")+
  theme_minimal()+
  ylab("# of Total Episodes")+
  scale_x_continuous(breaks = 1:10)+
  side_by_side_theme+
  xlab("Order of Infection")


# complicated_data %>%
#     group_by(total_n_infection)%>%
#     summarise(count = n()) %>%
#     ggplot(aes(x=total_n_infection, y=count))+
#     geom_bar(stat="identity", fill="darkblue")+
#     theme_minimal()+
#     ylab("Number of Children with N infections")+
#     scale_x_continuous(breaks = 1:10)+
#     xlab("Total # of Infections Recorded for Child")

```

```{r}
#| fig-cap: "Number of uncomplicated / Complicated Episodes for each individual"
#| fig-width: 7
#| fig-height: 4.2
#| warning: false


complicated_data %>%
  group_by(id, complicatedmalaria) %>%
  summarise(count = n()) %>%
  ggplot(aes(color=factor(complicatedmalaria), x=id, y=count))+
  geom_point()+
  #geom_dotplot(binaxis = "y", stackdir = "centerwhole", dotsize = 0.1)+
  facet_wrap(~complicatedmalaria)+
  theme_minimal()+
  theme(legend.position = "none",
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  scale_color_manual(values = c("darkred", "#FC6A03"))+
  scale_y_continuous(breaks = 1:10)

```

So 3 kids have complicated malaria twice, and 2 have it thrice. Lots of kids with multiple uncomplicated infections, up to 10!

```{r}
#| fig-cap: "Residuals vs. fitted values for quadratic binomial model"
#| fig-width: 7
#| fig-height: 7
#| warning: false
#| include: false
# look at model fit
plot(comp_model2, which = 1)
```

Next, I was curious to explore that relationship using individual level data. I included `id` as a random effect because there's a lot of variability in how many measurements are available for each kid.

```{r}
#| fig-cap: "Logistic regression of complicated malaria risk"
#| fig-width: 7
#| fig-height: 4.2
#| warning: false
#save model as function for plotting
indie_disease_model <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+(1|id), data=complicated_data, family = "binomial")



indie_disease_model_fun <- function(x){
  exp(
    mean(coef(indie_disease_model)$id[,1])+
    (coef(indie_disease_model)$id[1,2])*x+
    (coef(indie_disease_model)$id[1,3])*(x^2)
  )
  }


ggplot(complicated_df, aes(x=n_infection, y=risk))+
  geom_point(color="red")+
  theme_minimal()+
  # geom_ribbon(data=lme4_model_visualiser(indie_disease_model, "n_infection"), aes(x=n_infection, ymin = exp(lwr), ymax =exp(upr)), alpha = 0.2, inherit.aes = FALSE)+
  geom_function(fun=indie_disease_model_fun, color="black")+
  scale_x_continuous(breaks = seq(1,10))+
  ylab("Risk of Complicated Episodes")+
  xlab("Order of Infection")

```

Model looks good! The curve I'm plotting is showing the linear combination of coefficients with the mean intercept of `id`.

Now we can see whether the relationship between order of infection and the risk of severe malaria holds up when we include important covariates such as age (continuous or categorical, i.e. over and under six months of age) and parasitaemia.

```{r}
#| fig-width: 9
#| fig-height: 4.2
#| warning: false

indie_disease_model <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model2 <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+age+(1|id), data=complicated_data, family = "binomial")

indie_disease_model2a <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+age_cat+(1|id), data=complicated_data, family = "binomial")

indie_disease_model2b <-lme4::glmer(comp_num~n_infection*age+I(n_infection^2)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model2c <-lme4::glmer(comp_num~n_infection*age_cat+I(n_infection^2)+(1|id), data=complicated_data, family = "binomial")



indie_disease_model3 <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+log10(parsdens)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model4<-lme4::glmer(comp_num~n_infection+I(n_infection^2)+age+log10(parsdens)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model4a <-lme4::glmer(comp_num~n_infection+I(n_infection^2)+age_cat+log10(parsdens)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model4b <-lme4::glmer(comp_num~n_infection*age+I(n_infection^2)+log10(parsdens)+(1|id), data=complicated_data, family = "binomial")

indie_disease_model4c <-lme4::glmer(comp_num~n_infection*age_cat+I(n_infection^2)+log10(parsdens)+(1|id), data=complicated_data, family = "binomial")

list_of_models <- c(indie_disease_model, indie_disease_model2, indie_disease_model2a, indie_disease_model2b, indie_disease_model2c, indie_disease_model3, indie_disease_model4, indie_disease_model4a, indie_disease_model4b, indie_disease_model4c)

model_results_df <- data.frame("formula"=as.character(lapply(list_of_models, function(x) x@call$formula)))

model_results_df["coefs"] <- as.numeric(lapply(list_of_models, function(x) ncol(coef(x)$id)-1))

model_results_df["AIC"] <- as.numeric(lapply(list_of_models, function(x) AIC(x)))

knitr::kable(model_results_df, row.names = FALSE)%>%
  kableExtra::kable_styling(font_size = 16)

```

A $\Delta~AIC < -4$ is often used to "justify" the inclusion of a model parameter. In isolation neither age nor log10 parasitaemia improved model fit significantly, though higher parasitaemia and higher age were both significantly associated with complicated malaria. I'm not yet convinced the p value for age is trustworthy because there's an obvious correlation with n_infection, but this shouldn't matter for goodness of fit metrics like AIC.

Adding age and parasitaemia together provided a little more explanatory power, without overfitting too much. Interestingly, including an interaction between n_infection and age did not significantly improve model fit. This suggests that age during infection does not impact the "shape" of the relationship between order of infection and complicated malaria risk. Instead, older age is associated with a higher risk generally, but we would predict a similar peak and rapid decline with increasing order of infection.

In all cases, n_infection remained a significant coefficient. The overall variance explained in the model increased from 29% to 32%, with about half of that driven by fixed effects. That in itself is quite an interesting observation I think, that individual identity remains a highly significant contributor to complicated malaria risk, even when incorporating age and parasitaemia.

```{r}
#| fig-cap: "Age distributions of mild and complicated cases"
#| fig-width: 7
#| fig-height: 4.2
#| warning: false

ggplot(data=complicated_data, aes(y=age,
                                  x=complicatedmalaria,
                                  group=complicatedmalaria,
                                  fill=complicatedmalaria))+
  geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))+
  theme_minimal()+
  scale_fill_manual(values = c("darkred", "#FC6A03"))+
  theme(legend.position = "none",
        axis.title.x = element_blank())

```

```{r}
#| fig-cap: Number of otal malaria episodes at each order of infection (including quadratic regression line)
#| fig-width: 7
#| fig-height: 4.2
#| include: false
#| warning: false


indie_disease_model_fun <- function(x){
  exp(
    (coef(indie_disease_model)$id[1,1])+
    (coef(indie_disease_model)$id[1,2])*x+
    (coef(indie_disease_model)$id[1,3])*x^2
  )
  }

indie_disease_model4_fun <- function(x){
  exp(
      (coef(indie_disease_model4)$id[1,1])+
      (coef(indie_disease_model4)$id[1,2])*x+
      (coef(indie_disease_model4)$id[1,3])*(x^2)+
      #(coef(indie_disease_model4)$id[1,4])*max(log10(complicated_data$parsdens))+
      (coef(indie_disease_model4)$id[1,5])*max(complicated_data$age)
  )
}

indie_disease_model4_fun2 <- function(x){
  exp(
      (coef(indie_disease_model4)$id[1,1])+
      (coef(indie_disease_model4)$id[1,2])*x+
      (coef(indie_disease_model4)$id[1,3])*(x^2)+
      #(coef(indie_disease_model4)$id[1,4])*min(log10(complicated_data$parsdens))+
      (coef(indie_disease_model4)$id[1,5])*min(complicated_data$age)
  )
}



ggplot()+
  geom_point(data=complicated_df, aes(x=n_infection, y=risk), color="red")+
  theme_minimal()+
  geom_function(fun = indie_disease_model_fun, color="black")+
  geom_function(fun = indie_disease_model4_fun, color="red")+
  geom_function(fun = indie_disease_model4_fun2, color="blue")+
  scale_x_continuous(breaks = seq(1,10), limits = c(1,10))+
  ylab("Risk of Complicated Episodes")+
  xlab("Order of Infection")


```

```{r}
#| include: false
#| warning: false
#| eval: false
library(mediation)

complicated_data$n_infection2 <- complicated_data$n_infection^2

outcome_model <- lme4::glmer(comp_num~n_infection+n_infection2+age+(1|id), data=complicated_data, family = "binomial")

age_mediator <- lme4::lmer(age~n_infection+n_infection2+(1|id), data=complicated_data)

# 
# outcome_model <- glm(comp_num~n_infection+n_infection2+age+id, data=complicated_data, family = "binomial")
# 
# age_mediator <- lm(age~n_infection+n_infection2+id, data=complicated_data)


med_out <- mediate(age_mediator, outcome_model, treat="n_infection", mediator = "age", robustSE = TRUE, sims = 1000, group.out = "n_infection")
```
